package dp03_templateMethodPattern;

public class Templete {
//일정한 프로세스를 가진 요구사항을 템플릿 메소드 패턴을 이용하여 구현할 수 있다.
//공통된 프로세스를 묶어줄 수 있다.

//알고리즘의 구조를 메소드에 정의하고,
//하위 클래스에서 알고리즘 구조의 변경없이 알고리즘을 재정의 하는 패턴

//구현하려는 알고리즘이 일정한 프로세스가 있고,
//구현하려는 알고리즘이 변경 가능성이 있을때 유용하다.
	
/*1. 알고리즘을 여러단계로 나눈다.
 * 2. 나눠진 알고리즘의 단계를 메소드로 선언한다. 
 * 3. 알고리즘을 수행할 템플릿 메소드를 만든다. AbstGameConnectHelper.requeseConnection()
 * 4. 하위 클래스에서 여러 단계로 나눠진 메소드들을 구현한다. AbstGameConnectHelper
 * 
 * */
	
	
	
}
